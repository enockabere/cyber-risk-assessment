generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  name      String
  password  String
  role      String    @default("respondent")
  status    String    @default("active")
  createdAt DateTime  @default(now())
  lastLogin DateTime?
}

model QuestionnaireSection {
  id          String                 @id @default(uuid())
  title       String
  description String?
  parentId    String?
  parent      QuestionnaireSection?  @relation("SectionHierarchy", fields: [parentId], references: [id])
  children    QuestionnaireSection[] @relation("SectionHierarchy")
  questions   Question[]             @relation("SectionQuestions")
  createdAt   DateTime               @default(now())
  updatedAt DateTime @updatedAt @default(now())
}

model Question {
  id              String               @id @default(uuid())
  text            String
  type            QuestionType
  weight          Float?
  sectionId       String
  section         QuestionnaireSection @relation("SectionQuestions", fields: [sectionId], references: [id])
  scoringModelId  String?              
  scoringModel    ScoringModel?        @relation(fields: [scoringModelId], references: [id]) // new
  createdAt       DateTime             @default(now())
}


enum QuestionType {
  MULTIPLE_CHOICE
  TEXT
  RATING
  CHECKBOX
}

model Submission {
  id          String   @id @default(uuid())
  university  String
  submittedBy String
  answers     Json
  riskScore   Float
  flagged     Boolean  @default(false)
  createdAt   DateTime @default(now())

  scoringDetails ScoringDetail[]
}

model ScoringModel {
  id          String     @id @default(uuid())
  name        String
  description String?
  thresholds  Json
  createdAt   DateTime   @default(now())

  questions   Question[]
}


model ScoringDetail {
  id           String     @id @default(uuid())
  submission   Submission @relation(fields: [submissionId], references: [id])
  submissionId String
  questionId   String
  weightUsed   Float
  score        Float
}
